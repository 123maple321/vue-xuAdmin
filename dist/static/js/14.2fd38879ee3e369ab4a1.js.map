{"version":3,"sources":["webpack:///./node_modules/sortablejs/modular/sortable.esm.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","this","_objectSpread","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","value","defineProperty","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","closest","ctx","includeCTX","document","parentNode","host","nodeType","_throttleTimeout","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","options","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","args","setTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","expando","Date","getTime","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","push","pluginEvent","eventName","sortable","evt","_this","eventCanceled","cancel","eventNameGlobal","pluginName","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","_ref","originalEvent","data","bind","dragEl","parentEl","ghostEl","rootEl","nextEl","lastDownEl","cloneEl","cloneHidden","dragStarted","moved","putSortable","activeSortable","active","oldIndex","oldDraggableIndex","newIndex","newDraggableIndex","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","targetEl","toEl","fromEl","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","item","pullMode","lastPutMode","allEventProperties","dispatchEvent","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","some","rect","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","ret","preventDefault","stopPropagation","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","Number","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","animationCallbackId","animationStates","captureAnimationState","slice","child","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","arr","animateAll","clearTimeout","animating","animationTime","animatingRect","toRect","time","prevFromRect","prevToRect","targetMatrix","sqrt","pow","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","offsetWidth","animated","AnimationStateManager","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","src","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","stopImmediatePropagation","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","dragIndex","nextElementSibling","after","moveVector","changed","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","dropEffect","toArray","order","getAttribute","items","set","destroy","Array","querySelectorAll","removeAttribute","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","version","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","drop","toSortable","changedTouches","onSpill","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollY","canScrollX","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","Revert","Remove","startIndex","dragStart","_ref2","_ref3","_ref4","parentSortable","AutoScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","newElem"],"mappings":"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","file":"static/js/14.2fd38879ee3e369ab4a1.js","sourcesContent":["/**!\n * Sortable 1.10.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar version = \"1.10.2\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !!\n    /*@__PURE__*/\n    navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\n\n\nfunction getChild(el, childNum, options) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, [\"evt\"]);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    if (lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (threshold && insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // assign target only if condition is true\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n"],"sourceRoot":""}